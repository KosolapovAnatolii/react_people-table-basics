{"version":3,"sources":["components/NavigationLink/NavigationLink.tsx","components/NavBar/NavBar.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","pages/PeoplePage/PeoplePage.tsx","pages/HomePage/HomePage.tsx","pages/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["NavigationLink","title","to","className","isActive","cn","NavBar","role","PersonLink","person","personSlug","name","sex","born","died","motherName","fatherName","slug","currentSlug","classNames","PeopleTable","people","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","useParams","recivePeople","useCallback","data","useEffect","HomePage","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"qQAQaA,EAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OAC7C,cAAC,IAAD,CACEC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAIXF,GAAIA,EALN,SAOGD,GAR0C,ECNlCK,EAAS,kBACpB,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAgBF,MAAM,OAAOC,GAAG,MAEhC,cAAC,EAAD,CAAgBD,MAAM,SAASC,GAAG,kBAXpB,E,6BCOTM,EAA8B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAElDC,EAOEF,EAPFE,KACAC,EAMEH,EANFG,IACAC,EAKEJ,EALFI,KACAC,EAIEL,EAJFK,KACAC,EAGEN,EAHFM,WACAC,EAEEP,EAFFO,WACAC,EACER,EADFQ,KAEIC,EAAcR,IAAeO,EAEnC,OACE,qBACE,UAAQ,SAERd,UAAWgB,IAAW,CAAE,yBAA0BD,IAHpD,UAKE,6BACE,cAAC,IAAD,CACEhB,GAAE,kBAAae,GACfd,UAAWgB,IAAW,CAAE,kBAA2B,MAARP,IAF7C,SAIGD,MAIL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,GAAc,MACnB,6BAAKC,GAAc,QAhBdC,EAmBV,ECnCYG,EAA+B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQX,EAAiB,EAAjBA,WACrD,OACE,wBACE,UAAQ,cACRP,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGkB,EAAOC,KAAI,SAAAb,GAAM,OAChB,cAAC,EAAD,CAEEA,OAAQA,EACRC,WAAYA,GAFPD,EAAOQ,KAFE,QAUzB,EC3BM,SAASM,IACd,OALYC,EAKA,IAJL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAKvBI,MAAK,kBAAMC,MARA,oEAQN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IAPlB,IAAcP,CAQb,C,UCXYQ,EAAS,kBACpB,qBAAK7B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECKT8B,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOb,EAAP,KAAec,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAEA,EAA4BC,cAApB5B,kBAAR,MAAqB,GAArB,EAEM6B,EAAeC,sBAAW,gCAC9B,qGACEH,GAAa,GADf,SAEqBd,IAFrB,OAEQkB,EAFR,OAIEN,EAAUM,GACVJ,GAAa,GALf,2CAMG,IAOL,OAJAK,qBAAU,WACRH,GACD,GAAE,IAGD,qCACE,oBAAIpC,UAAU,QAAd,yBACA,cAAC,EAAD,CAAakB,OAAQA,EAAQX,WAAYA,IACzC,qBAAKP,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGiC,GAAa,cAAC,EAAD,KACZf,GACA,qCACE,mBAAG,UAAQ,qBAAqBlB,UAAU,kBAA1C,kCAIA,mBAAG,UAAQ,kBAAX,yDASb,ECjDYwC,EAAW,kBACtB,oBAAIxC,UAAU,QAAd,sBADsB,ECAXyC,EAAe,kBAC1B,oBAAIzC,UAAU,QAAd,2BAD0B,ECQf0C,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAM1C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2C,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU7C,GAAG,IAAI8C,SAAO,MAEpD,eAAC,IAAD,CAAOF,KAAK,UAAZ,UACE,cAAC,IAAD,CACEG,OAAK,EACLF,QAAS,cAAC,EAAD,MAEX,cAAC,IAAD,CACED,KAAK,sBACLC,QAAS,cAAC,EAAD,SAIb,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eArBhB,ECAnBG,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.639f4d93.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Props {\n  title: string;\n  to: string;\n}\n\nexport const NavigationLink: React.FC<Props> = ({ title, to }) => (\n  <NavLink\n    className={({ isActive }) => cn(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import { NavigationLink } from '../NavigationLink/NavigationLink';\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationLink title=\"Home\" to=\"/\" />\n\n        <NavigationLink title=\"People\" to=\"/people\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n  personSlug: string | undefined;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person, personSlug }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n  const currentSlug = personSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({ 'has-background-warning': currentSlug })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{motherName || '-'}</td>\n      <td>{fatherName || '-'}</td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[];\n  personSlug: string;\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, personSlug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n            personSlug={personSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useParams } from 'react-router-dom';\nimport { useCallback, useEffect, useState } from 'react';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { personSlug = '' } = useParams();\n\n  const recivePeople = useCallback(\n    async () => {\n      setIsLoading(true);\n      const data = await getPeople();\n\n      setPeople(data);\n      setIsLoading(false);\n    }, [],\n  );\n\n  useEffect(() => {\n    recivePeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable people={people} personSlug={personSlug} />\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n          {!people && (\n            <>\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\n\nimport { NavBar } from './components/NavBar';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route\n              index\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\"/people/:personSlug\"\n              element={<PeoplePage />}\n            />\n          </Route>\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}